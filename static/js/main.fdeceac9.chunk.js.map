{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","components/Section/Section.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","contactsItemsReducer","createReducer","state","filter","contactsFilterReducer","combineReducers","items","middleWare","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","Section","section","connect","contactsToContactForm","dispatch","onSubmitForm","useState","setName","setNumber","handleChange","e","currentTarget","value","resetLocalState","onSubmit","preventDefault","normalizedName","toLowerCase","some","contact","alert","form","autoComplete","label","type","pattern","title","required","onChange","input","btn","filterToFilter","onDeleteContact","onClick","getVisibleContacts","normalizedFilter","trim","item","includes","contactsToContactList","contactList","map","contactItem","contactsToApp","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fdeceac9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2X5-8\",\"input\":\"Filter_input__1Ul8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1cy0N\",\"contactItem\":\"ContactList_contactItem__2zyDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1nc3u\",\"btn\":\"Contact_btn__2UDE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__36Fby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3wigr\",\"title\":\"Section_title__1UECV\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('phonebook/AddContact', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction('phonebook/DeleteContact');\r\n\r\nexport const changeFilter = createAction('phonebook/ChangeFilter');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\r\n\r\nconst contactsItemsReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst contactsFilterReducer = createReducer('', {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: contactsItemsReducer,\r\n  filter: contactsFilterReducer,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleWare = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  })\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['filter'],\r\n}\r\n \r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleWare: middleWare,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction ContactForm({ contactsToContactForm, onSubmitForm }) {\r\n  const [name,setName] = useState('');\r\n  const [number,setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Проверка на повторный ввод существующего контакта\r\n    const normalizedName = name.toLowerCase();\r\n    contactsToContactForm.some(contact => contact.name.toLowerCase() === normalizedName)\r\n      ?\r\n        alert(`${name} is already in contacts.`)\r\n      : \r\n        onSubmitForm({ name, number });\r\n    resetLocalState();\r\n  };\r\n\r\n  const resetLocalState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit} \r\n      className={s.form} \r\n      autoComplete=\"off\">\r\n      \r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n              value={name}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n              value={number}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>        \r\n\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contactsToContactForm: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitForm: ({ name, number }) => dispatch(addContact({ name, number })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contactsToContactForm: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n  onSubmitForm: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Filter({ filterToFilter, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name / number\r\n      <input\r\n        type=\"text\"\r\n        value={filterToFilter}\r\n        onChange={onChange}\r\n        className={s.input}>\r\n      </input>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filterToFilter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(changeFilter(e.currentTarget.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filterToFilter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Contact.module.css';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Contact({ name, number, id, onDeleteContact }) { \r\n  return (\r\n    <>\r\n      <p className={s.contact}>• {name}: {number}</p>\r\n      <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\n\r\nfunction ContactList({ contactsToContactList }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactsToContactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contactItem}>\r\n            <Contact\r\n              name={name}\r\n              number={number}\r\n              id={id}>\r\n            </Contact>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n    const normalizedFilter = filter.trim().toLowerCase();\r\n\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter) ||\r\n      item.number.includes(filter.trim())\r\n    );\r\n  };\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contactsToContactList: getVisibleContacts(items, filter),\r\n});\r\n// const mapStateToProps = state => {\r\n//   const { items, filter } = state.contacts;\r\n//   const visibleContacts = getVisibleContacts(items, filter);\r\n\r\n//   return {\r\n//     contactsToContactList: visibleContacts,\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contactsToContactList: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n};","// import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App({ contactsToApp }) {\n  return (\n    <Container>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Section>\n      \n      <Section>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contactsToApp: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nApp.propTypes = {\n  contactsToApp: PropTypes.arrayOf(\n    PropTypes.shape()).isRequired,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__I_vIX\",\"label\":\"ContactForm_label__2Q6ai\",\"input\":\"ContactForm_input__10X9X\",\"btn\":\"ContactForm_btn__1hCZE\"};"],"sourceRoot":""}